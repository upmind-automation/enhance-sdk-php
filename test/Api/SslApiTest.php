<?php
/**
 * SslApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * orchd
 *
 * orchd API docs
 *
 * The version of the OpenAPI document: 8.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Upmind\EnhanceSdk\Test\Api;

use \Upmind\EnhanceSdk\Configuration;
use \Upmind\EnhanceSdk\ApiException;
use \Upmind\EnhanceSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SslApiTest Class Doc Comment
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SslApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteServerSslCert
     *
     * Delete ssl certificate.
     *
     */
    public function testDeleteServerSslCert()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWebsiteSslCert
     *
     * Deletes given ssl certificate.
     *
     */
    public function testDeleteWebsiteSslCert()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for enableWebsiteSslCert
     *
     * Enables already stored certificate for a given domain.
     *
     */
    public function testEnableWebsiteSslCert()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerSslCert
     *
     * Fetch a single SSL certificate.
     *
     */
    public function testGetServerSslCert()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerSslCerts
     *
     * Returns service SSL certificates data for MO.
     *
     */
    public function testGetServerSslCerts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteSslCert
     *
     * Fetches a single SSL cert.
     *
     */
    public function testGetWebsiteSslCert()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteSslCerts
     *
     * Returns all certificates data with domain mappings for a given website.
     *
     */
    public function testGetWebsiteSslCerts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadServerSslCert
     *
     * Upload SSL certificate for server/service use.
     *
     */
    public function testUploadServerSslCert()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadWebsiteSslCerts
     *
     * Upload custom ssl certificate, key and optional fullchain for a given website.
     *
     */
    public function testUploadWebsiteSslCerts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
