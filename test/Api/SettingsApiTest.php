<?php
/**
 * SettingsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * orchd
 *
 * orchd API docs
 *
 * The version of the OpenAPI document: 9.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Upmind\EnhanceSdk\Test\Api;

use \Upmind\EnhanceSdk\Configuration;
use \Upmind\EnhanceSdk\ApiException;
use \Upmind\EnhanceSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SettingsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SettingsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createSettings
     *
     * Create settings.
     *
     */
    public function testCreateSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteGlobalServiceSetting
     *
     * Delete a single global service setting.
     *
     */
    public function testDeleteGlobalServiceSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrchdLoginPolicyEmailBlacklist
     *
     * Delete an orchd login policy email blacklist.
     *
     */
    public function testDeleteOrchdLoginPolicyEmailBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrchdLoginPolicyEmailWhitelist
     *
     * Delete an orchd login policy email whitelist.
     *
     */
    public function testDeleteOrchdLoginPolicyEmailWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrchdLoginPolicyIpBlacklist
     *
     * Delete an orchd login policy ip blacklist.
     *
     */
    public function testDeleteOrchdLoginPolicyIpBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrchdLoginPolicyIpWhitelist
     *
     * Delete an orchd login policy ip whitelist.
     *
     */
    public function testDeleteOrchdLoginPolicyIpWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrchdLoginPolicyTemporaryEmailBlacklist
     *
     * Delete an orchd login policy temporary email blacklist.
     *
     */
    public function testDeleteOrchdLoginPolicyTemporaryEmailBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrchdLoginPolicyTemporaryEmailWhitelist
     *
     * Delete an orchd login policy temporary email whitelist.
     *
     */
    public function testDeleteOrchdLoginPolicyTemporaryEmailWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrchdLoginPolicyTemporaryIpBlacklist
     *
     * Delete an orchd login policy temporary ip blacklist.
     *
     */
    public function testDeleteOrchdLoginPolicyTemporaryIpBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrchdLoginPolicyTemporaryIpWhitelist
     *
     * Delete an orchd login policy temporary ip whitelist.
     *
     */
    public function testDeleteOrchdLoginPolicyTemporaryIpWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSetting
     *
     * Remove the specified setting.
     *
     */
    public function testDeleteSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDockerRegistry
     *
     * Gets the Docker registry credentials..
     *
     */
    public function testGetDockerRegistry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGlobalServiceSetting
     *
     * Get the value for a particular global service setting.
     *
     */
    public function testGetGlobalServiceSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLogSettings
     *
     * Get the orchd log settings.
     *
     */
    public function testGetOrchdLogSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLoginPolicyEmailBlacklist
     *
     * Get the orchd login policy email blacklist.
     *
     */
    public function testGetOrchdLoginPolicyEmailBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLoginPolicyEmailWhitelist
     *
     * Get the orchd login policy email whitelist.
     *
     */
    public function testGetOrchdLoginPolicyEmailWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLoginPolicyIpBlacklist
     *
     * Get the orchd login policy ip blacklist.
     *
     */
    public function testGetOrchdLoginPolicyIpBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLoginPolicyIpWhitelist
     *
     * Get the orchd login policy ip whitelist.
     *
     */
    public function testGetOrchdLoginPolicyIpWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLoginPolicySettings
     *
     * Get the orchd login policy settings.
     *
     */
    public function testGetOrchdLoginPolicySettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLoginPolicyTemporaryEmailBlacklist
     *
     * Get the orchd login policy temporary email blacklist.
     *
     */
    public function testGetOrchdLoginPolicyTemporaryEmailBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLoginPolicyTemporaryEmailWhitelist
     *
     * Get the orchd login policy temporary email whitelist.
     *
     */
    public function testGetOrchdLoginPolicyTemporaryEmailWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLoginPolicyTemporaryIpBlacklist
     *
     * Get the orchd login policy temporary ip blacklist.
     *
     */
    public function testGetOrchdLoginPolicyTemporaryIpBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrchdLoginPolicyTemporaryIpWhitelist
     *
     * Get the orchd login policy temporary ip whitelist.
     *
     */
    public function testGetOrchdLoginPolicyTemporaryIpWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSetting
     *
     * Get the specified setting.
     *
     */
    public function testGetSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSettings
     *
     * Get all current settings.
     *
     */
    public function testGetSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setDockerRegistry
     *
     * Updates the Docker registry credentials..
     *
     */
    public function testSetDockerRegistry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setGlobalServiceSetting
     *
     * Set a single global service setting.
     *
     */
    public function testSetGlobalServiceSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLogSettings
     *
     * Set the orchd log settings.
     *
     */
    public function testSetOrchdLogSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLoginPolicyEmailBlacklist
     *
     * Set the orchd login policy email blacklist as a whole.
     *
     */
    public function testSetOrchdLoginPolicyEmailBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLoginPolicyEmailWhitelist
     *
     * Set the orchd login policy email whitelist as a whole.
     *
     */
    public function testSetOrchdLoginPolicyEmailWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLoginPolicyIpBlacklist
     *
     * Set the orchd login policy ip blacklist as a whole.
     *
     */
    public function testSetOrchdLoginPolicyIpBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLoginPolicyIpWhitelist
     *
     * Set the orchd login policy ip whitelist as a whole.
     *
     */
    public function testSetOrchdLoginPolicyIpWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLoginPolicySettings
     *
     * Set a single orchd login policy setting.
     *
     */
    public function testSetOrchdLoginPolicySettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLoginPolicyTemporaryEmailBlacklist
     *
     * Set the orchd login policy temporary whitelist as a whole.
     *
     */
    public function testSetOrchdLoginPolicyTemporaryEmailBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLoginPolicyTemporaryEmailWhitelist
     *
     * Set the orchd login policy temporary email whitelist as a whole.
     *
     */
    public function testSetOrchdLoginPolicyTemporaryEmailWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLoginPolicyTemporaryIpBlacklist
     *
     * Set the orchd login policy temporary ip blacklist as a whole.
     *
     */
    public function testSetOrchdLoginPolicyTemporaryIpBlacklist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrchdLoginPolicyTemporaryIpWhitelist
     *
     * Set the orchd login policy temporary ip whitelist as a whole.
     *
     */
    public function testSetOrchdLoginPolicyTemporaryIpWhitelist()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSetting
     *
     * Create or update the specified setting.
     *
     */
    public function testUpdateSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
